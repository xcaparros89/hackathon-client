[{"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\index.js":"1","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\App.js":"2","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Private.js":"3","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Login.js":"4","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Signup.js":"5","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Article.js":"6","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\lib\\AuthProvider.js":"7","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\routes\\PrivateRoute.js":"8","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Author.js":"9","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Home.js":"10","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\lib\\post-service.js":"11","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\lib\\auth-service.js":"12","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Navbar.js":"13","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Footer.js":"14","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Searchbar.js":"15"},{"size":245,"mtime":1607772989475,"results":"16","hashOfConfig":"17"},{"size":1034,"mtime":1607772989464,"results":"18","hashOfConfig":"17"},{"size":290,"mtime":1607772989471,"results":"19","hashOfConfig":"17"},{"size":2022,"mtime":1607772989469,"results":"20","hashOfConfig":"17"},{"size":2709,"mtime":1607772989472,"results":"21","hashOfConfig":"17"},{"size":4235,"mtime":1607794888439,"results":"22","hashOfConfig":"17"},{"size":3660,"mtime":1607772989477,"results":"23","hashOfConfig":"17"},{"size":887,"mtime":1607772989482,"results":"24","hashOfConfig":"17"},{"size":2390,"mtime":1607795571044,"results":"25","hashOfConfig":"17"},{"size":2956,"mtime":1607795144521,"results":"26","hashOfConfig":"17"},{"size":1439,"mtime":1607791159084,"results":"27","hashOfConfig":"17"},{"size":788,"mtime":1607772989478,"results":"28","hashOfConfig":"17"},{"size":1689,"mtime":1607795169665,"results":"29","hashOfConfig":"17"},{"size":649,"mtime":1607792495726,"results":"30","hashOfConfig":"17"},{"size":1011,"mtime":1607792495769,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1n4ly34",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\index.js",[],["65","66"],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\App.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Private.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Login.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Signup.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Article.js",["67","68"],"import React, { Component } from 'react';\r\nimport Navbar from './Navbar'\r\nimport { Link } from \"react-router-dom\";\r\nimport { withAuth } from \"../lib/AuthProvider\";\r\nimport postservice from '../lib/post-service'\r\nimport './Article.css'\r\n\r\nexport class Article extends Component {\r\n\r\n    state={\r\n        post: {},\r\n        id: '',\r\n        creator:'' ,\r\n        body:'',\r\n        date: '',\r\n        newMessage: false,\r\n    }\r\n\r\n    getThePost= async() =>{\r\n        const {params} = this.props.match\r\n        const thePost = await postservice.getPost(params.id)\r\n        console.log(thePost)\r\n        this.setState({\r\n            post: thePost,\r\n            creator: this.props.user.username,\r\n            id: thePost._id,\r\n            date: new Date()\r\n        })\r\n    } \r\n\r\n    componentDidMount(){\r\n        this.getThePost()\r\n    }\r\n    \r\n    handleChange(e){\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit= async() =>{\r\n        const {id, creator, body, date} = this.state\r\n        \r\n        await postservice.addComment({id, creator, body, date})\r\n        this.setState({\r\n            creator: '',\r\n            body:'',\r\n            date: ''\r\n        })\r\n    }\r\n\r\n    showForm(){\r\n        this.setState({\r\n            newMessage: !this.state.newMessage\r\n        })\r\n    }\r\n    render() {\r\n        const {post, creator, body, date} = this.state\r\n        return (         \r\n            <div >\r\n            <Navbar/>\r\n            <div className='main'>\r\n                <div className='article'>\r\n                    <div className='words'>\r\n                        <p>{post.date}</p>\r\n                        <h1 style={{color: 'red'}}>{post.title}</h1>\r\n                        <button className='button_white'> <img src=\"/images/simbolito-comunista.png\" style={{width:20}} alt=\"\"/> Share this article</button>\r\n                        <br></br>\r\n                        <h3>{post.description}</h3>\r\n                    </div>\r\n                    <img src={post.foto} alt=\"\"/>\r\n                </div>\r\n                {this.state.newMessage ? \r\n                        <div>\r\n                        <div className=\"theButton\">\r\n                        <button className='button_white' onClick={() => this.showForm()}><img style={{width: 20}} src='/image.png' alt=\"\" /> Hide form</button>\r\n                        </div>\r\n                    <form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"form_part\">\r\n                  <label>Your comment:</label>\r\n                  <textarea style={{width: 500, height: 200}}\r\n                    type=\"text\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  </div>\r\n                    <input className=\"button_comment\" type=\"submit\" value=\"Comment\"/>\r\n                    </form>\r\n                </div> : <div className=\"theButton\">\r\n                        <button className='button_white' onClick={() => this.showForm()}><img style={{width: 20}} src='/image.png' alt=\"\" /> New message</button>\r\n                        </div>}\r\n                <div>\r\n                <div>\r\n                <img style={{width: 20}} src='/image.png' alt=\"\" /> <h3 style={{color: 'red'}}>Community comments </h3> <p style={{backgroundColor: 'black', width: '100%'}}>Hello there!</p>\r\n                </div>\r\n                \r\n                    {post.comments && post.comments.length !== 0 ? post.comments.map((comment) => {\r\n                        return <div className=\"comment\">\r\n                        <p>{comment.date}</p>\r\n                        <h3>{comment.creator} </h3>\r\n                        <p>{comment.body}</p>\r\n                        <div className=\"theButton\">\r\n                        <button className=\"button_red\">Reply</button>\r\n                        </div>\r\n                        </div>\r\n                    }) : null}\r\n\r\n                </div>\r\n                   \r\n                \r\n            <Link to=\"/\">\r\n              Back to Home\r\n            </Link> \r\n            </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withAuth(Article)\r\n","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\lib\\AuthProvider.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Author.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Home.js",["69"],"import React, { Component } from 'react'\r\nimport Navbar from './Navbar'\r\nimport Footer from './Footer'\r\nimport { Link } from \"react-router-dom\";\r\nimport postservice from '../lib/post-service'\r\nimport './style.css'\r\n\r\nexport class Home extends Component {\r\n    state = {\r\n        posts: [],\r\n        filteredPosts:[]\r\n    }\r\n\r\n    getThePosts = async() => {\r\n        const thePosts = await postservice.getAll()\r\n        this.setState({\r\n            posts: thePosts,\r\n            filteredPosts:thePosts\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getThePosts()\r\n    }\r\n\r\n    filterPosts = (searchTerm) => {\r\n        // convertimos la palabra buscada en minúsculas\r\n        const searchedTerm = searchTerm.toLowerCase();\r\n    \r\n        // filtramos una copia de la lista original de comidas para devolver únicamente las comidas cuyo nombre (en minúsculas también) corresponden al término de búsqueda\r\n        const filteredList = [...this.state.posts].filter( post => {\r\n          return post.title.toLowerCase().includes(searchedTerm);\r\n        })\r\n    \r\n        // actualizamos la lista de comidas filtradas (la que vamos a mostrar en el render())\r\n        this.setState({filteredPosts: filteredList})\r\n    }\r\n\r\n    render() {\r\n        const {filteredPosts} = this.state\r\n         return (\r\n            <div>\r\n                <Navbar filterPosts={this.filterPosts} />\r\n                <div className='main'>\r\n                    <div className='title-flex'>\r\n                        <div className='title-box'>\r\n                        <h1 className='title'>RECETAS COMUNISTAS</h1>\r\n                        <h1 className='title'>PARA UNA</h1>\r\n                        <h1 className='title'>BUENA SALUD MENTAL</h1>\r\n                        <div className='title-banderin'>\r\n                            <img className='banderin' src='./images/banderin.png' alt='simbolito-comunista'/>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='articles-flex'>\r\n                        {this.state.filteredPosts.map(post=>\r\n                            (<div className='article-box'>\r\n                                <Link to={`/article/${post._id}`} id={post.id} className='title-article'>\r\n                                    {post.title}\r\n                                </Link>\r\n                            </div>)\r\n                        )}\r\n                    </div>\r\n                    <div>\r\n                        <div className='red-background-title' >\r\n                            <p>HISTORIAS REALES</p>\r\n                        </div>\r\n                        <div className='flex-historias'>\r\n                            <img src='./images/historias-reales.png' alt='' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\lib\\post-service.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\lib\\auth-service.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Navbar.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Footer.js",[],"C:\\Users\\eric_\\Desktop\\IronHack\\post-course\\hackathon-client\\hackathon-client\\src\\components\\Searchbar.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":57,"column":22,"nodeType":"76","messageId":"77","endLine":57,"endColumn":29},{"ruleId":"74","severity":1,"message":"78","line":57,"column":37,"nodeType":"76","messageId":"77","endLine":57,"endColumn":41},{"ruleId":"74","severity":1,"message":"79","line":40,"column":16,"nodeType":"76","messageId":"77","endLine":40,"endColumn":29},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'creator' is assigned a value but never used.","Identifier","unusedVar","'date' is assigned a value but never used.","'filteredPosts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]